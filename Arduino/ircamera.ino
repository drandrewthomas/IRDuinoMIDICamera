#include <MIDIUSB.h>#include <Wire.h>#include <Adafruit_AMG88xx.h>Adafruit_AMG88xx amg;float pixels[AMG88xx_PIXEL_ARRAY_SIZE];float ambient;void setup(){  amg.begin();  delay(100);}void loop(){  readir();  delay(10);}void readir(){  int c;  ambient=amg.readThermistor();  noteOn(14,int(ambient+0.5),0);  MidiUSB.flush();  delay(2);  amg.readPixels(pixels);  for(c=0;c<AMG88xx_PIXEL_ARRAY_SIZE;c++)  {    noteOn(14,int(pixels[c]+0.5),c+1);    MidiUSB.flush();    Serial.print(".");    delay(2);  }  noteOn(14,0,99);  MidiUSB.flush();  delay(2);}// First parameter is the event type (0x09 = note on, 0x08 = note off).// Second parameter is note-on/note-off, combined with the channel.// Channel can be anything between 0-15. Typically reported to the user as 1-16.// Third parameter is the note number (48 = middle C).// Fourth parameter is the velocity (64 = normal, 127 = fastest).void noteOn(byte channel, byte pitch, byte velocity){  midiEventPacket_t noteOn = {0x09, 0x90 | channel, pitch, velocity};  MidiUSB.sendMIDI(noteOn);}void noteOff(byte channel, byte pitch, byte velocity){  midiEventPacket_t noteOff = {0x08, 0x80 | channel, pitch, velocity};  MidiUSB.sendMIDI(noteOff);}// First parameter is the event type (0x0B = control change).// Second parameter is the event type, combined with the channel.// Third parameter is the control number number (0-119).// Fourth parameter is the control value (0-127).void controlChange(byte channel, byte control, byte value){  midiEventPacket_t event = {0x0B, 0xB0 | channel, control, value};  MidiUSB.sendMIDI(event);}